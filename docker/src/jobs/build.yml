description: >
  Build docker image

executor: default

parameters:
  image_base_name:
    type: string
    description: "The docker base name eg project/api"
  dockerfile:
    type: string
    default: "Dockerfile-php"
    description: "The docker base name eg Dockerfile-api"
  use_ecr:
    type: boolean
    default: true
    description: "Set true to use aws ecr"
  use_docker_login:
    type: boolean
    default: false
    description: "Set true to use docker login"
  docker_registry: 
    type: string
    default: "${DOCKER_REGISTRY}/"
    description: "The docker registry base"
  docker_folder: 
    type: string
    default: "docker"
    description: "The docker folder"
  
steps:
  - utils/install_git
  - run:
      command: apk add openssh
  - checkout
  - setup_remote_docker:  { docker_layer_caching: true }
  - when:
      condition: <<parameters.use_ecr>>
      steps:
        - ecr_login 

  - when:
      condition: <<parameters.use_docker_login>>
      steps:
        - login 
  
  - run:
      name: Build app
      working_directory: ~/project
      command: |
          source ~/project/.circleci/determine_env.sh
          docker build -t <<parameters.docker_registry>><<parameters.image_base_name>>:$CIRCLE_SHA1 -f ~/project/<<parameters.docker_folder>>/<<parameters.dockerfile>> .

  # Need to push     
  - when:
      condition: 
        or:
          - <<parameters.use_ecr>>
          - <<parameters.use_docker_login>>
      steps:
        - run:
            name: Push App
            working_directory: ~/project
            command: |
                source ~/project/.circleci/determine_env.sh
                docker push <<parameters.docker_registry>><<parameters.image_base_name>>:$CIRCLE_SHA1

  # Extract to workspace
  - when:
      condition: 
        and:
            - not: <<parameters.use_ecr>>
            - not: <<parameters.use_docker_login>>
      steps:
        - run:
            name: Save image to workspace
            working_directory: ~/project
            command: |
                source ~/project/.circleci/determine_env.sh
                mkdir -p docker-images
                docker save -o docker-images/<<parameters.image_base_name>>.$CIRCLE_SHA1.tar <<parameters.image_base_name>>:$CIRCLE_SHA1